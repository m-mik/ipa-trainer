datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  lesson        Lesson[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model WordInfo {
  id           String       @id @default(cuid())
  word         String
  ukIpa        String
  ukAudio      String
  ukIpaAlt     String
  usIpa        String
  usIpaAlt     String
  usAudio      String
  partOfSpeech PartOfSpeech
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  question     Question[]

  @@unique([word, partOfSpeech])
}

model Lesson {
  id        String     @id @default(cuid())
  userId    String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  question  Question[]
  user      User       @relation(fields: [userId], references: [id])
}

model Question {
  id         String   @id @default(cuid())
  wordInfoId String
  lessonId   String
  answer     Answer   @default(NONE)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  wordInfo   WordInfo @relation(fields: [wordInfoId], references: [id])
  lesson     Lesson   @relation(fields: [lessonId], references: [id])
}

enum Answer {
  NONE
  CORRECT
  INCORRECT
}

enum PartOfSpeech {
  NOUN
  VERB
  ADJECTIVE
}
